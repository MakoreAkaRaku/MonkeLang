// here is a comment
/* here is another comment; the main difference is that
 this one is gonna be commented until it finds the inversed open comment.
*/

//Aquí, declarando lenguajes porqué el de amor no me lo sé...

// -> LineComm
/* -> OpenComm
*/ -> CloseComm

char    ->  char
iikiik  ->  input
ookook  ->  output
perma   ->  constant
empty   ->  noType
yeet    ->  break
palm    ->  bool 
banana  ->  true
banant  ->  false
think   ->  if
either  ->  else
gives   ->  return
monke       // keyword to define a functions
start       // keyword? to define the initial function of the program.
number      // keyword for int type.
0b[0|1]+        // binary number
0x[A-Fa-f0-9]+  // hexadecimal number
0o[0-7]+        // octal number
addition        // keyword to 'include'
repeatIf    -> while
for ->  for
(   ->  openParenth
)   ->  closeParenth
{   ->  openKey
}   ->  closeKey
[   ->  openBrack
]   ->  closeBrack
;   ->  endLine
!   ->  negation            // keyword for negation boolean or condition.
or  ->  or            // keyword for logical or
and ->  and            // keyword for logical AND
!=  ->  distinct
==  ->  equals
<=  ->  lessThan
>=  ->  greatThan
>   ->  greater
<   ->  lesser
=   ->  assign
[A-Za-z_][A-Za-z_0-9]* -> identifier
monke start() // monke is a token to start functions, while starts means the first function to be called.
{
    gives // Gives is a keyword for returning a value from a function.
}